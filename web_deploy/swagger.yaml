swagger: '2.0'
info:
  version: 0.0.4
  title: Business Registries REST API
  license:
    name: Creative Commons Attribution 3.0 Australia
    url: 'https://creativecommons.org/licenses/by/3.0/au/'
  termsOfService: 'https://ato.gov.au/terms-of-service/'
  x-logo:
    url: 'https://www.ato.gov.au/uploadedImages/Content/_DEM/Images/logo-ato.png'
    backgroundColor: '#D3D3D3'
  description: |
    # Introduction
    The Business Registries API is built on HTTP. The API is RESTful. It has predictable resource URIs.

      The API is documented in [OpenAPI](https://github.com/OAI/OpenAPI-Specification) format.
      In addition to the standard OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).

    # Overview
    The following sections describes the resources that make up the Business Registries REST API.
    ## Current Version
    By default, all requests to https://api.abr.ato.gov.au receive the `v1` version of the REST API. We encourage you to explicitly request this version via the `Accept` header.

        Accept: application/vnd.abr-ato.v1+json

    ## Schema
    All API access is over HTTPS, and accessed from https://api.abr.ato.gov.au. All data is sent and received as JSON.
    Blank fields are included.
    All timestamps use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:

        YYYY-MM-DDTHH:MM:SSZ

    ## Timezones
    Some requests allow for specifying timestamps or generate timestamps with time zone information. We apply the following rules, in order of priority, to determine timezone information for API calls.
    ### Explicitly provide an ISO 8601 timestamp with timezone information
    For API calls that allow for a timestamp to be specified, we use that exact timestamp.

      For example: `2017-07-01T11:05:06+10:00`

    ## Pagination
    Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.

      For example:

        Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
              <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

    `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
    ## Parameters
    Many API methods take optional parameters:

        GET /individuals/1234/addresses/?addressType='Mailing'

    In this example, the '1234' value is provided for the `:partyId` parameter in the path while `:addressType` is passed in the query string.
    For POST, PATCH, PUT, and DELETE requests, parameters not included in the URL should be encoded as JSON with a Content-Type of 'application/json'.
    ## Root Endpoint
    You can issue a GET request to the root endpoint (also known as the service root) to get all the endpoint categories that the REST API supports:

        curl https://api.abr.ato.gov.au

    ## Authentication
    The Business Registries API supports API Key authentication.

      When you sign up for an account, you are given your first API key. You can generate additional API keys, and delete
      API keys (as you may need to rotate your keys in the future). You authenticate to the Business Registries API by
      providing your secret key in the request header.
host: api.abr.ato.gov.au
basePath: /
schemes:
  - https
x-servers:
  - url: //api.abr.ato.gov.au/
    description: Production API Server
  - url: //api.sandbox.abr.ato.gov.au/
    description: Sandbox API Server
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: Individuals
    description: |
      An individual is a person about whom the registry wishes to maintain information.

        For example, the individual's date and place of birth (for the purposes of identification) and the individual's
        residential address (which is used for administrative or law enforcement purposes).
  - name: Individuals Addresses
    description: |
      The registry maintains information about an individual's contact details for administrative purposes.

        Including:
        - an address for the service of documents
        - a principal place of business address
  - name: Individuals Electronic Addresses
    description: |
      The registry maintains information about an individual's contact details for administrative purposes.

        Including:
        - an email address
        - a mobile number
  - name: Individuals Business Names
    description: |
      A business name is a name or title under which a person conducts a business.
  - name: Individuals Licenses
    description: |
      If you carry on a business you may need to hold a licence.

        For example, if you provide financial services, you are required to hold an Australian Financial
        Services (AFS) licence.
  - name: Organisations
    description: |
      An organisation usually consists of a number of individuals or groups bound by a common purpose about whom the
      registry wishes to maintain information.

        For example, the organisation's legal entity type (e.g., Incorporated Entity, Unincorporated Entity,
        Partnership or Joint Venture).
  - name: Organisations Addresses
    description: |
      The registry maintains information about an organisation's contact details for administrative purposes.

        Including:
        - an address for the service of documents
        - a principal place of business address
  - name: Organisations Electronic Addresses
    description: |
      The registry maintains information about an organisation's contact details for administrative purposes.

        Including:
        - an email address
        - a mobile number
  - name: Organisations Business Names
    description: |
      A business name is a name or title under which an organisation conducts a business.
  - name: Organisations Licenses
    description: |
      If you carry on a business you may need to hold a licence.

        For example, if you provide financial services, you are required to hold an Australian Financial
        Services (AFS) licence.
  - name: Business Names
    description: |
      A business name is a name or title under which a person or organisation conducts a business.
  - name: Licenses
    description: |
      If you carry on a business you may need to hold a licence.

        For example, if you provide financial services, you are required to hold an Australian Financial
        Services (AFS) licence.
x-tagGroups:
  - name: Individuals
    tags:
      - Individuals
      - Individuals Addresses
      - Individuals Electronic Addresses
      - Individuals Business Names
      - Individuals Licenses
  - name: Organisations
    tags:
      - Organisations
      - Organisations Addresses
      - Organisations Electronic Addresses
      - Organisations Business Names
      - Organisations Licenses
  - name: Business Names
    tags:
      - Business Names
  - name: Licenses
    tags:
      - Licenses
parameters:
  apiKey:
    name: apiKey
    in: header
    description: The API key.
    type: string
    required: true
  partyId:
    name: partyId
    in: path
    description: The party identifier.
    type: string
    required: true
  addressId:
    name: addressId
    in: path
    description: The address identifier.
    type: string
    required: true
  productId:
    name: productId
    in: path
    description: The product identifier.
    type: string
    required: true
  dateOfBirth:
    name: dateOfBirth
    in: query
    description: 'The individual''s date of birth in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
    type: string
    required: false
  placeOfBirth:
    name: placeOfBirth
    in: query
    description: The individual's place of birth.
    type: string
    required: false
  registeredIdentifier:
    name: registeredIdentifier
    in: query
    description: 'The registered identifier, for example, "ACN" or "ABN".'
    type: string
    required: false
  identifier:
    name: identifier
    in: query
    description: The identifier.
    type: string
    required: false
responses:
  InvalidArgument:
    description: The client specified an invalid argument
    schema:
      $ref: '#/definitions/invalid-argument'
  Unauthenticated:
    description: 'Request not authenticated due to missing, invalid, or expired token'
    schema:
      $ref: '#/definitions/unauthenticated'
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/not-found'
  FailedPrecondition:
    description: Request can not be executed in the current system state
    schema:
      $ref: '#/definitions/failed-precondition'
paths:
  /business-names:
    get:
      tags:
        - Business Names
      summary: Retrieve a list of business names
      description: |
        Retrieve a list of business names
      parameters:
        - $ref: '#/parameters/apiKey'
      responses:
        '200':
          description: A list of business names was retrieved successfully
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          schema:
            type: array
            items:
              $ref: '#/definitions/business-name'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  /individuals:
    get:
      tags:
        - Individuals
      summary: Retrieve a list of individuals
      description: |
        Retrieve a list of individuals
      parameters:
        - $ref: '#/parameters/apiKey'
        - $ref: '#/parameters/dateOfBirth'
        - $ref: '#/parameters/placeOfBirth'
      responses:
        '200':
          description: A list of individuals was retrieved successfully
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          schema:
            type: array
            items:
              $ref: '#/definitions/individual'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Individuals
      summary: Create an individual
      description: |
        Create an individual
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: body
          in: body
          description: Individual resource
          required: true
          schema:
            $ref: '#/definitions/individual'
      responses:
        '201':
          description: Individual was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/individual'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/individuals/{partyId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Individuals
      summary: Retrieve an individual
      description: |
        Retrieve an individual with the specified identifier
      responses:
        '200':
          description: Individual was retrieved successfully
          schema:
            $ref: '#/definitions/individual'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Individuals
      summary: Update an individual
      description: |
        Update an individual
      parameters:
        - name: body
          in: body
          description: Individual resource
          required: true
          schema:
            $ref: '#/definitions/individual'
      responses:
        '200':
          description: Individual was updated
          schema:
            $ref: '#/definitions/individual'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Individuals
      summary: Delete an individual
      description: |
        Delete an individual with the specified identifier
      responses:
        '204':
          description: Individual was deleted
        '400':
          description: Individual has related resources and cannot be deleted
          $ref: '#/responses/FailedPrecondition'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/individuals/{partyId}/addresses':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Individuals Addresses
      summary: Retrieve a list of addresses
      responses:
        '200':
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          description: Addresses were retrieved successfully
          schema:
            $ref: '#/definitions/address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Individuals Addresses
      summary: Create an address
      description: |
        Create an address
      parameters:
        - name: body
          in: body
          description: Address resource
          required: true
          schema:
            $ref: '#/definitions/address'
      responses:
        '201':
          description: Address was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/individuals/{partyId}/addresses/{addressId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/addressId'
    get:
      tags:
        - Individuals Addresses
      summary: Retrieve an address
      description: |
        Retrieve an address
      responses:
        '200':
          description: Address was retrieved successfully
          schema:
            $ref: '#/definitions/address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Individuals Addresses
      summary: Update an address
      description: |
        Update an address
      parameters:
        - name: body
          in: body
          description: Address resource
          required: true
          schema:
            $ref: '#/definitions/address'
      responses:
        '200':
          description: Address was updated
          schema:
            $ref: '#/definitions/address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Individuals Addresses
      summary: Delete an address
      description: |
        Delete an address
      responses:
        '204':
          description: Address was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/individuals/{partyId}/business-names':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Individuals Business Names
      summary: Retrieve a list of business names
      responses:
        '200':
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          description: Business Names were retrieved successfully
          schema:
            $ref: '#/definitions/business-name'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Individuals Business Names
      summary: Create a business name
      description: |
        Create a business name
      parameters:
        - name: body
          in: body
          description: Business Name resource
          required: true
          schema:
            $ref: '#/definitions/business-name'
      responses:
        '201':
          description: Business Name was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/business-name'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/individuals/{partyId}/business-names/{productId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/productId'
    get:
      tags:
        - Individuals Business Names
      summary: Retrieve a business name
      description: |
        Retrieve a business name
      responses:
        '200':
          description: Business Name was retrieved successfully
          schema:
            $ref: '#/definitions/business-name'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Individuals Business Names
      summary: Update a business name
      description: |
        Update a business name
      parameters:
        - name: body
          in: body
          description: Business Name resource
          required: true
          schema:
            $ref: '#/definitions/business-name'
      responses:
        '200':
          description: Address was updated
          schema:
            $ref: '#/definitions/business-name'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Individuals Business Names
      summary: Delete a business name
      description: |
        Delete a business name
      responses:
        '204':
          description: Address was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/individuals/{partyId}/electronic-addresses':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Individuals Electronic Addresses
      summary: Retrieve a list of electronic addresses
      responses:
        '200':
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          description: Electronic addresses were retrieved successfully
          schema:
            $ref: '#/definitions/electronic-address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Individuals Electronic Addresses
      summary: Create an electronic address
      description: |
        Create an electronic address
      parameters:
        - name: body
          in: body
          description: Electronic Address resource
          required: true
          schema:
            $ref: '#/definitions/electronic-address'
      responses:
        '201':
          description: Electronic Address was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/electronic-address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/individuals/{partyId}/electronic-addresses/{addressId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/addressId'
    get:
      tags:
        - Individuals Electronic Addresses
      summary: Retrieve an electronic address
      description: |
        Retrieve an electronic address
      responses:
        '200':
          description: Electronic address was retrieved successfully
          schema:
            $ref: '#/definitions/electronic-address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Individuals Electronic Addresses
      summary: Update an electronic address
      description: |
        Update an electronic address
      parameters:
        - name: body
          in: body
          description: Electronic Address resource
          required: true
          schema:
            $ref: '#/definitions/electronic-address'
      responses:
        '200':
          description: Electronic Address was updated
          schema:
            $ref: '#/definitions/electronic-address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Individuals Electronic Addresses
      summary: Delete an electronic address
      description: |
        Delete an electronic address
      responses:
        '204':
          description: Electronic Address was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/individuals/{partyId}/licenses':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Individuals Licenses
      summary: Retrieve a list of licenses
      responses:
        '200':
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          description: Licenses were retrieved successfully
          schema:
            $ref: '#/definitions/license'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Individuals Licenses
      summary: Create a license
      description: |
        Create a license
      parameters:
        - name: body
          in: body
          description: License resource
          required: true
          schema:
            $ref: '#/definitions/license'
      responses:
        '201':
          description: License was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/license'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/individuals/{partyId}/licenses/{productId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/productId'
    get:
      tags:
        - Individuals Licenses
      summary: Retrieve a license
      description: |
        Retrieve a license
      responses:
        '200':
          description: License was retrieved successfully
          schema:
            $ref: '#/definitions/license'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Individuals Licenses
      summary: Update a license
      description: |
        Update a license
      parameters:
        - name: body
          in: body
          description: License resource
          required: true
          schema:
            $ref: '#/definitions/license'
      responses:
        '200':
          description: License was updated
          schema:
            $ref: '#/definitions/license'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Individuals Licenses
      summary: Delete a license
      description: |
        Delete a license
      responses:
        '204':
          description: License was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  /licenses:
    get:
      tags:
        - Licenses
      summary: Retrieve a list of licenses
      description: |
        Retrieve a list of licenses
      parameters:
        - $ref: '#/parameters/apiKey'
      responses:
        '200':
          description: A list of licenses was retrieved successfully
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          schema:
            type: array
            items:
              $ref: '#/definitions/license'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  /organisations:
    get:
      tags:
        - Organisations
      summary: Retrieve a list of organisations
      description: |
        Retrieve a list of organisations
      parameters:
        - $ref: '#/parameters/apiKey'
        - $ref: '#/parameters/registeredIdentifier'
        - $ref: '#/parameters/identifier'
      responses:
        '200':
          description: A list of organisations was retrieved successfully
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          schema:
            type: array
            items:
              $ref: '#/definitions/organisation'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Organisations
      summary: Create an organisation
      description: |
        Create an organisation
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: body
          in: body
          description: Organisation resource
          required: true
          schema:
            $ref: '#/definitions/organisation'
      responses:
        '201':
          description: Organisation was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/organisation'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/organisations/{partyId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Organisations
      summary: Retrieve an organisation
      description: |
        Retrieve an organisation with the specified identifier
      responses:
        '200':
          description: Individual was retrieved successfully
          schema:
            $ref: '#/definitions/organisation'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Organisations
      summary: Update an organisation
      description: |
        Update an organisation
      parameters:
        - name: body
          in: body
          description: Organisation resource
          required: true
          schema:
            $ref: '#/definitions/organisation'
      responses:
        '200':
          description: Organisation was updated
          schema:
            $ref: '#/definitions/organisation'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Organisations
      summary: Delete an organisation
      description: |
        Delete an organisation with the specified identifier
      responses:
        '204':
          description: Organisation was deleted
        '400':
          description: Organisation has related resources and cannot be deleted
          $ref: '#/responses/FailedPrecondition'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/organisations/{partyId}/addresses':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Organisations Addresses
      summary: Retrieve a list of addresses
      responses:
        '200':
          description: Addresses were retrieved successfully
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          schema:
            $ref: '#/definitions/address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Organisations Addresses
      summary: Create an address
      description: |
        Create an address
      parameters:
        - name: body
          in: body
          description: Address resource
          required: true
          schema:
            $ref: '#/definitions/address'
      responses:
        '201':
          description: Address was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/organisations/{partyId}/addresses/{addressId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/addressId'
    get:
      tags:
        - Organisations Addresses
      summary: Retrieve an address
      description: |
        Retrieve an address
      responses:
        '200':
          description: Address was retrieved successfully
          schema:
            $ref: '#/definitions/address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Organisations Addresses
      summary: Update an address
      description: |
        Update an address
      parameters:
        - name: body
          in: body
          description: Address resource
          required: true
          schema:
            $ref: '#/definitions/address'
      responses:
        '200':
          description: Address was updated
          schema:
            $ref: '#/definitions/address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Organisations Addresses
      summary: Delete an address
      description: |
        Delete an address
      responses:
        '204':
          description: Address was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/organisations/{partyId}/business-names':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Organisations Business Names
      summary: Retrieve a list of business names
      responses:
        '200':
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          description: Business Names were retrieved successfully
          schema:
            $ref: '#/definitions/business-name'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Organisations Business Names
      summary: Create a business name
      description: |
        Create a business name
      parameters:
        - name: body
          in: body
          description: Business Name resource
          required: true
          schema:
            $ref: '#/definitions/business-name'
      responses:
        '201':
          description: Business Name was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/business-name'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/organisations/{partyId}/business-names/{productId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/productId'
    get:
      tags:
        - Organisations Business Names
      summary: Retrieve a business name
      description: |
        Retrieve a business name
      responses:
        '200':
          description: Business Name was retrieved successfully
          schema:
            $ref: '#/definitions/business-name'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Organisations Business Names
      summary: Update a business name
      description: |
        Update a business name
      parameters:
        - name: body
          in: body
          description: Business Name resource
          required: true
          schema:
            $ref: '#/definitions/business-name'
      responses:
        '200':
          description: Address was updated
          schema:
            $ref: '#/definitions/business-name'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Organisations Business Names
      summary: Delete a business name
      description: |
        Delete a business name
      responses:
        '204':
          description: Address was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/organisations/{partyId}/electronic-addresses':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Organisations Electronic Addresses
      summary: Retrieve a list of electronic addresses
      responses:
        '200':
          description: Electronic addresses were retrieved successfully
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          schema:
            $ref: '#/definitions/electronic-address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Organisations Electronic Addresses
      summary: Create an electronic address
      description: |
        Create an electronic address
      parameters:
        - name: body
          in: body
          description: Electronic Address resource
          required: true
          schema:
            $ref: '#/definitions/electronic-address'
      responses:
        '201':
          description: Electronic Address was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/electronic-address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/organisations/{partyId}/electronic-addresses/{addressId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/addressId'
    get:
      tags:
        - Organisations Electronic Addresses
      summary: Retrieve an electronic address
      description: |
        Retrieve an electronic address
      responses:
        '200':
          description: Electronic address was retrieved successfully
          schema:
            $ref: '#/definitions/electronic-address'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Organisations Electronic Addresses
      summary: Update an electronic address
      description: |
        Update an electronic address
      parameters:
        - name: body
          in: body
          description: Electronic Address resource
          required: true
          schema:
            $ref: '#/definitions/electronic-address'
      responses:
        '200':
          description: Electronic Address was updated
          schema:
            $ref: '#/definitions/electronic-address'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Organisations Electronic Addresses
      summary: Delete an electronic address
      description: |
        Delete an electronic address
      responses:
        '204':
          description: Electronic Address was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
  '/organisations/{partyId}/licenses':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
    get:
      tags:
        - Organisations Licenses
      summary: Retrieve a list of licenses
      responses:
        '200':
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                          <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.
              type: string
          description: Licenses were retrieved successfully
          schema:
            $ref: '#/definitions/license'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    post:
      tags:
        - Organisations Licenses
      summary: Create a license
      description: |
        Create a license
      parameters:
        - name: body
          in: body
          description: License resource
          required: true
          schema:
            $ref: '#/definitions/license'
      responses:
        '201':
          description: License was created
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: '#/definitions/license'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
  '/organisations/{partyId}/licenses/{productId}':
    parameters:
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/partyId'
      - $ref: '#/parameters/productId'
    get:
      tags:
        - Organisations Licenses
      summary: Retrieve a license
      description: |
        Retrieve a license
      responses:
        '200':
          description: License was retrieved successfully
          schema:
            $ref: '#/definitions/license'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Organisations Licenses
      summary: Update a license
      description: |
        Update a license
      parameters:
        - name: body
          in: body
          description: License resource
          required: true
          schema:
            $ref: '#/definitions/license'
      responses:
        '200':
          description: License was updated
          schema:
            $ref: '#/definitions/license'
        '400':
          $ref: '#/responses/InvalidArgument'
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Organisations Licenses
      summary: Delete a license
      description: |
        Delete a license
      responses:
        '204':
          description: License was deleted
        '401':
          $ref: '#/responses/Unauthenticated'
        '404':
          $ref: '#/responses/NotFound'
definitions:
  error-details:
    type: object
    properties:
      code:
        description: The error code.
        type: string
        example: NullValue
      target:
        description: The error target.
        type: string
        example: familyName
      message:
        description: The error message.
        type: string
        example: Family name must not be null
  failed-precondition:
    type: object
    properties:
      code:
        description: The error code.
        type: string
        example: '400'
      message:
        description: The error message.
        type: string
        example: Request can not be executed in the current system state
      status:
        description: The error status.
        type: string
        example: FAILED_PRECONDITION
      details:
        type: array
        items:
          $ref: '#/definitions/error-details'
  invalid-argument:
    type: object
    properties:
      code:
        description: The error code.
        type: string
        example: '400'
      message:
        description: The error message.
        type: string
        example: The client specified an invalid argument
      status:
        description: The error status.
        type: string
        example: INVALID_ARGUMENT
      details:
        type: array
        items:
          $ref: '#/definitions/error-details'
  not-found:
    type: object
    properties:
      code:
        description: The error code.
        type: string
        example: '404'
      message:
        description: The error message.
        type: string
        example: The specified resource was not found
      status:
        description: The error status.
        type: string
        example: NOT_FOUND
      details:
        type: array
        items:
          $ref: '#/definitions/error-details'
  unauthenticated:
    type: object
    properties:
      code:
        description: The error code.
        type: string
        example: '401'
      message:
        description: The error message.
        type: string
        example: 'Request not authenticated due to missing, invalid, or expired token'
      status:
        description: The error status.
        type: string
        example: UNAUTHENTICATED
      details:
        $ref: '#/definitions/error-details'
  address:
    description: The Address resource.
    type: object
    properties:
      id:
        description: The resource's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/addressId'
      name:
        description: The address name.
        type: string
        example: Kembery Building
      line1:
        description: The address line 1.
        type: string
        example: Level 7
      line2:
        description: The address line 2.
        type: string
        example: 21 Genge Street
      line3:
        description: The address line 3.
        type: string
        example: ''
      suburb:
        description: The suburb.
        type: string
        example: Civic
      city:
        description: The city.
        type: string
        example: Canberra
      postalCode:
        description: The postal code.
        type: string
        example: '2601'
      country:
        description: The country.
        type: string
        example: Australia
  individual-address:
    allOf:
      - $ref: '#/definitions/address'
      - type: object
        properties:
          addressType:
            description: The address type.
            type: string
            default: Principal Place of Residence
            enum:
              - Mailing
              - Principal Place of Business
              - Principal Place of Residence
          fromDate:
            description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
            type: string
            example: '1979-01-13T09:05:06+10:00'
          toDate:
            description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
            type: string
            example: ''
  organisation-address:
    allOf:
      - $ref: '#/definitions/address'
      - type: object
        properties:
          addressType:
            description: The address type.
            type: string
            default: Principal Place of Business
            enum:
              - Mailing
              - Principal Place of Business
          fromDate:
            description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
            type: string
            example: '1979-01-13T09:05:06+10:00'
          toDate:
            description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
            type: string
            example: ''
  electronic-address:
    description: The Electronic Address details.
    type: object
    properties:
      id:
        description: The resource's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/addressId'
      countryPrefix:
        description: 'The country prefix, for example, "61".'
        type: string
        example: '61'
      areaCode:
        description: 'The area code, for example, "02".'
        type: string
        example: '02'
      number:
        description: 'The number, for example, "62164453".'
        type: string
        example: '62164453'
      extension:
        description: 'The extension number, for example, "4453".'
        type: string
        example: ''
      email:
        description: 'The email address, for example, "robert.ferguson@ato.gov.au".'
        type: string
        example: ''
      url:
        description: 'The website address, for example, "https://ato.gov.au".'
        type: string
        example: ''
      type:
        description: 'The electronic address type, for example, "Email", "Fax", "Landline", "Mobile" or "Website".'
        type: string
        example: Landline
      fromDate:
        description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: '1979-01-13T09:05:06+10:00'
      toDate:
        description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: ''
  individual-name:
    description: The Individual Name resource.
    type: object
    properties:
      id:
        description: The resource's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/resourceId'
      namePrefix:
        description: 'The individual''s name prefix, for example, "Mr" or "Ms".'
        type: string
        example: Mr
      givenName:
        description: The individual's given name.
        type: string
        example: Robert
      middleName:
        description: The individual's middle name.
        type: string
        example: James
      familyName:
        description: The individual's family name.
        type: string
        example: Ferguson
      nameSuffix:
        description: 'The individual''s name suffix, for example, "Jr" or "Sr".'
        type: string
        example: ''
      direction:
        description: 'The direction used to render the individual''s name, for example, "right-to-left" or "left-to-right".'
        type: string
        example: right-to-left
      formalSalutation:
        description: 'The individual''s formal salutation, for example, "Mr William Smith".'
        type: string
        example: Mr Robert Ferguson
      informalSalutation:
        description: 'The individual''s informal salutation, for example, "Bill".'
        type: string
        example: Rob
      nameType:
        description: The name type.
        default: Principal Name
        enum:
          - Alias
          - Principal Name
          - Stage Name
      fromDate:
        description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: '1979-01-13T09:05:06+10:00'
      toDate:
        description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: ''
  individual:
    description: The Individual resource.
    type: object
    required:
      - dateOfBirth
      - placeOfBirth
    discriminator: gender
    properties:
      id:
        description: The party's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/partyId'
      dateOfBirth:
        description: 'The individual''s date of birth, for example, "13 Jan 1979".'
        type: string
        example: 13 Jan 1979
      placeOfBirth:
        description: 'The individual''s palce of birth, for example, "Tamworth".'
        type: string
        example: Tamworth
      gender:
        description: The individual's gender.
        type: string
        default: Male
        enum:
          - Female
          - Male
          - Not Applicable
          - Not Known
      names:
        type: array
        items:
          $ref: '#/definitions/individual-name'
      addresses:
        type: array
        items:
          $ref: '#/definitions/individual-address'
      electronicAddresses:
        type: array
        items:
          $ref: '#/definitions/electronic-address'
      fromDate:
        description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: '1979-01-13T09:05:06+10:00'
      toDate:
        description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: ''
  organisation-name:
    description: The Organisation Name resource.
    type: object
    properties:
      id:
        description: The resource's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/resourceId'
      name:
        description: The organisation's name.
        type: string
        example: Australian Taxation Office
      fromDate:
        description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: '1928-03-03T09:05:06+10:00'
      toDate:
        description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: ''
  organisation:
    description: The Organisation resource.
    type: object
    properties:
      id:
        description: The party's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/partyId'
      legalEntityType:
        description: 'The organisation''s legal entity type, for example, Company, Trust, Partnership or Joint Venture.'
        type: string
        example: Company
      establishmentDate:
        description: 'The organisation''s establishment date, for example, "01 Jul 2016".'
        type: string
        example: 03 Mar 1928
      registeredIdentifiers:
        type: array
        items:
          $ref: '#/definitions/registered-identifier'
      names:
        type: array
        items:
          $ref: '#/definitions/organisation-name'
      addresses:
        type: array
        items:
          $ref: '#/definitions/organisation-address'
      electronicAddresses:
        type: array
        items:
          $ref: '#/definitions/electronic-address'
      fromDate:
        description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: '1979-01-13T09:05:06+10:00'
      toDate:
        description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: ''
  registered-identifier:
    description: The Registered Identifier resource.
    type: object
    properties:
      id:
        description: The resource's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/resourceId'
      identifier:
        description: The registered identifier.
        type: string
        example: '123456789'
      identifierType:
        description: The registered identifier type.
        default: ACN
        enum:
          - ACN
          - ABN
      fromDate:
        description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: '1979-01-13T09:05:06+10:00'
      toDate:
        description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
        type: string
        example: ''
  business-name:
    description: The Business Name resource.
    type: array
    items:
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/definitions/resourceId'
        name:
          description: The business name.
          type: string
          example: XYZ Technology Ventures
        status:
          description: The business name's status.
          type: string
          default: Pending Approval
          enum:
            - Approved
            - Pending Approval
            - Suspended
  license:
    description: The License resource.
    type: array
    items:
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/definitions/resourceId'
        licenseType:
          description: The license type.
          default: Australian Financial Services
          enum:
            - Australian Financial Services
            - License 2B
        status:
          description: The business name's status.
          type: string
          default: Pending Approval
          enum:
            - Approved
            - Issued
            - Pending Approval
            - Suspended
            - Expired
  addressId:
    type: string
    description: The address's unique identifier. Defaults to UUID v4
    maxLength: 36
    example: 123e4567-e89b-12d3-a456-426655440000
  partyId:
    type: string
    description: The party's unique identifier. Defaults to UUID v4
    maxLength: 36
    example: 123e4567-e89b-12d3-a456-426655440000
  resourceId:
    type: string
    description: The resource ID. Defaults to UUID v4
    maxLength: 36
    example: 123e4567-e89b-12d3-a456-426655440000
