swagger: '2.0'
info:
  version: '1.0'
  title: Business Registries REST API
  license:
    name: Creative Commons Attribution 3.0 Australia
    url: 'https://creativecommons.org/licenses/by/3.0/au/'
  termsOfService: 'https://ato.gov.au/terms-of-service/'
  x-logo:
    url: 'https://www.ato.gov.au/uploadedImages/Content/_DEM/Images/logo-ato.png'
    backgroundColor: '#D3D3D3'
  description: |
    # Introduction
    The Business Registries API is built on HTTP. The API is RESTful. It has predictable resource URIs. It accepts and returns JSON (and optionally XML) in the HTTP body.
    # Authentication
    When you sign up for an account, you are given your first API key. You can generate additional API keys, and delete API keys (as you may need to rotate your keys in the future). You authenticate to the Business Registries API by providing your secret key in the request header.
host: api.abr.ato.gov.au
basePath: /
schemes:
  - https
x-servers:
  - url: //api.abr.ato.gov.au/
    description: Production API Server
  - url: //api.sandbox.abr.ato.gov.au/
    description: Sandbox API Server
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: Individuals
    description: |
      An individual is a person about whom the registry wishes to maintain information.
      For example, the individual's date and place of birth (for the purposes of identification) and the individual's residential address (which is used for administrative or law enforcement purposes only).
  - name: Organisations
    description: |
      An organisation usually consists of a number of individuals or groups bound by a common purpose about whom the registry wishes to maintain information.
      For example, the organisation's legal entity type (e.g., Incorporated Entity, Unincorporated Entity, Partnership or Joint Venture).
responses:
  AccessForbidden:
    description: 'Access forbidden, an invalid API-KEY was used'
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: Resource was not found
    schema:
      $ref: '#/definitions/Error'
  InvalidDataError:
    description: Invalid data was sent
    schema:
      $ref: '#/definitions/InvalidError'
parameters:
  resourceId:
    name: id
    in: path
    description: The resource identifier string
    type: string
    required: true
  dateOfBirth:
    name: dateOfBirth
    in: query
    description: The individual's date of birth
    type: string
    required: true
  placeOfBirth:
    name: placeOfBirth
    in: query
    description: The individual's place of birth
    type: string
    required: true
  registeredIdentifier:
    name: registeredIdentifier
    in: query
    description: 'The registered identifier, for example, "ACN" or "ABN".'
    type: string
    required: true
  identifier:
    name: identifier
    in: query
    description: The identifier.
    type: string
    required: true
paths:
  /individuals:
    get:
      tags:
        - Individuals
      summary: Retrieve a list of individuals
      description: |
        Retrieve a list of individuals
      parameters:
        - $ref: '#/parameters/dateOfBirth'
        - $ref: '#/parameters/placeOfBirth'
      responses:
        '200':
          description: A list of individuals was retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/individual'
        '401':
          $ref: '#/responses/AccessForbidden'
    post:
      tags:
        - Individuals
      summary: Create an individual
      description: |
        Create an individual
      parameters:
        - name: body
          in: body
          description: Individual resource
          required: true
          schema:
            $ref: '#/definitions/individual'
      responses:
        '201':
          description: Individual was created
          schema:
            $ref: '#/definitions/individual'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
  '/individuals/{id}':
    parameters:
      - $ref: '#/parameters/resourceId'
    get:
      tags:
        - Individuals
      summary: Retrieve an individual
      description: |
        Retrieve an individual with the specified identifier
      responses:
        '200':
          description: Individual was retrieved successfully
          schema:
            $ref: '#/definitions/individual'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Individuals
      summary: Update an individual
      description: |
        Update an individual
      parameters:
        - name: body
          in: body
          description: Individual resource
          required: true
          schema:
            $ref: '#/definitions/individual'
      responses:
        '200':
          description: Individual was updated
          schema:
            $ref: '#/definitions/individual'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
    delete:
      tags:
        - Individuals
      summary: Delete an individual
      description: |
        Delete an individual with the specified identifier
      responses:
        '204':
          description: Individual was deleted
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Individual has related resources and cannot be deleted
          schema:
            $ref: '#/definitions/Error'
  /organisations:
    get:
      tags:
        - Organisations
      summary: Retrieve a list of organisations
      description: |
        Retrieve a list of organisations
      parameters:
        - $ref: '#/parameters/registeredIdentifier'
        - $ref: '#/parameters/identifier'
      responses:
        '200':
          description: A list of organisations was retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/organisation'
        '401':
          $ref: '#/responses/AccessForbidden'
    post:
      tags:
        - Organisations
      summary: Create an organisation
      description: |
        Create an organisation
      parameters:
        - name: body
          in: body
          description: Organisation resource
          required: true
          schema:
            $ref: '#/definitions/organisation'
      responses:
        '201':
          description: Organisation was created
          schema:
            $ref: '#/definitions/organisation'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
  '/organisations/{id}':
    parameters:
      - $ref: '#/parameters/resourceId'
    get:
      tags:
        - Organisations
      summary: Retrieve an organisation
      description: |
        Retrieve an organisation with the specified identifier
      responses:
        '200':
          description: Individual was retrieved successfully
          schema:
            $ref: '#/definitions/organisation'
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - Organisations
      summary: Update an organisation
      description: |
        Update an organisation
      parameters:
        - name: body
          in: body
          description: Organisation resource
          required: true
          schema:
            $ref: '#/definitions/organisation'
      responses:
        '200':
          description: Organisation was updated
          schema:
            $ref: '#/definitions/organisation'
        '401':
          $ref: '#/responses/AccessForbidden'
        '422':
          $ref: '#/responses/InvalidDataError'
    delete:
      tags:
        - Organisations
      summary: Delete an organisation
      description: |
        Delete an organisation with the specified identifier
      responses:
        '204':
          description: Organisation was deleted
        '401':
          $ref: '#/responses/AccessForbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          description: Organisation has related resources and cannot be deleted
          schema:
            $ref: '#/definitions/Error'
definitions:
  address:
    description: The Address details.
    type: array
    items:
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/definitions/resourceId'
        name:
          description: The address name.
          type: string
        line1:
          description: The address line 1.
          type: string
        line2:
          description: The address line 2.
          type: string
        line3:
          description: The address line 3.
          type: string
        suburb:
          description: The suburb.
          type: string
        city:
          description: The city.
          type: string
        postalCode:
          description: The postal code.
          type: string
        country:
          description: The country.
          type: string
        fromDate:
          description: 'The date the address became active in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        toDate:
          description: 'The date the address became inactive in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        type:
          description: 'The address type, for example, "Mailing", "Principal Place of Business" or "Principal Place of Residence".'
          type: string
  electronic-address:
    description: The Electronic Address details.
    type: array
    items:
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/definitions/resourceId'
        countryPrefix:
          description: 'The country prefix, for example, "61".'
          type: string
        areaCode:
          description: 'The area code, for example, "02".'
          type: string
        number:
          description: 'The number, for example, "62164453".'
          type: string
        extension:
          description: 'The extension number, for example, "4453".'
          type: string
        email:
          description: 'The email address, for example, "robert.ferguson@ato.gov.au".'
          type: string
        url:
          description: 'The website address, for example, "https://ato.gov.au".'
          type: string
        fromDate:
          description: 'The date the electronic address became active in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        toDate:
          description: 'The date the electronic address became inactive in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        type:
          description: 'The electronic address type, for example, "Email", "Fax", "Landline", "Mobile" or "Website".'
          type: string
  Error:
    type: object
    properties:
      status:
        type: integer
        minimum: 100
        maximum: 600
      error:
        type: string
  individual:
    description: The Individual details.
    type: object
    properties:
      id:
        description: The resource's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/resourceId'
      dateOfBirth:
        description: 'The individual''s date of birth, for example, "13-01-1979".'
        type: string
      placeOfBirth:
        description: 'The individual''s palce of birth, for example, "Tamworth".'
        type: string
      gender:
        description: 'The individual''s gender, for example, "Female", "Male", "Not Applicable" or "Not Known".'
        type: string
      names:
        $ref: '#/definitions/individual-name'
      addresses:
        $ref: '#/definitions/address'
      electronicAddresses:
        $ref: '#/definitions/electronic-address'
  individual-name:
    description: The Individual Name details.
    type: array
    items:
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/definitions/resourceId'
        namePrefix:
          description: 'The individual''s name prefix, for example, "Mr" or "Ms".'
          type: string
        givenName:
          description: The individual's given name.
          type: string
        middleName:
          description: The individual's middle name.
          type: string
        familyName:
          description: The individual's family name.
          type: string
        nameSuffix:
          description: 'The individual''s name suffix, for example, "Jr" or "Sr".'
          type: string
        direction:
          description: 'The direction used to render the individual''s name, for example, "right-to-left" or "left-to-right".'
          type: string
        formalSalutation:
          description: 'The individual''s formal salutation, for example, "Mr William Smith".'
          type: string
        informalSalutation:
          description: 'The individual''s informal salutation, for example, "Bill".'
          type: string
        fromDate:
          description: 'The date the name became active in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        toDate:
          description: 'The date the name became inactive in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        type:
          description: 'The name type, for example, "Alias" or "Principal Name".'
          type: string
  InvalidError:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        properties:
          details:
            type: array
            items:
              type: string
  organisation:
    description: The Organisation details.
    type: object
    properties:
      id:
        description: The resource's unique identifier.
        readOnly: true
        allOf:
          - $ref: '#/definitions/resourceId'
      establishmentDate:
        description: 'The organisation''s establishment date, for example, "01-07-2016".'
        type: string
      registeredIdentifiers:
        $ref: '#/definitions/registered-identifier'
      addresses:
        $ref: '#/definitions/address'
      electronicAddresses:
        $ref: '#/definitions/electronic-address'
  registered-identifier:
    description: The Registered Identifier details.
    type: array
    items:
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/definitions/resourceId'
        identifier:
          description: The registered identifier.
          type: string
        fromDate:
          description: 'The date the registered identifier became active in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        toDate:
          description: 'The date the registered identifier became inactive in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).'
          type: string
        type:
          description: 'The registered identifier type, for example, "ACN" or "ABN".'
          type: string
  resourceId:
    type: string
    description: The resource ID. Defaults to UUID v4
    maxLength: 36
    example: 123e4567-e89b-12d3-a456-426655440000
