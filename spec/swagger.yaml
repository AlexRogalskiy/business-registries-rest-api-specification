swagger: '2.0'
info:
  version: '0.0.4'
  title: 'Business Registries REST API'
  license:
    name: 'Creative Commons Attribution 3.0 Australia'
    url: 'https://creativecommons.org/licenses/by/3.0/au/'
  termsOfService: 'https://ato.gov.au/terms-of-service/'
  x-logo:
    url: 'https://www.ato.gov.au/uploadedImages/Content/_DEM/Images/logo-ato.png'
    backgroundColor: '#D3D3D3'
  description: >
    # Introduction

    The Business Registries API is built on HTTP. The API is RESTful. It has predictable resource URIs.

    # OpenAPI Specification

    This API is documented in [OpenAPI](https://github.com/OAI/OpenAPI-Specification) format.
    In addition to the standard OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).

    # Overview

    The following sections describes the resources that make up the Business Registries REST API v1.

    ## Current Version

    By default, all requests to https://api.abr.ato.gov.au receive the `v1` version of the REST API.
    We encourage you to explicitly request this version via the `Accept` header.

        Accept: application/vnd.abr-ato.v1+json

    ## Schema

    All API access is over HTTPS, and accessed from https://api.abr.ato.gov.au.
    All data is sent and received as JSON (and optionally as XML).

    Blank fields are included.

    All timestamps are returned in ISO 8601 format:

        YYYY-MM-DDTHH:MM:SSZ

    ## Timezones

    Some requests allow for specifying timestamps or generate timestamps with time zone information.
    We apply the following rules, in order of priority, to determine timezone information for API calls.

    ### Explicitly provide an ISO 8601 timestamp with timezone information

    For API calls that allow for a timestamp to be specified, we use that exact timestamp.

      For example: `2017-07-01T11:05:06+10:00`

    ## Pagination

    Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.

      For example:

        Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
              <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

    `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries
    start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on
    `page 34`. Accordingly, we have 33 more pages of information that we can consume.

    ## Parameters

    Many API methods take optional parameters.

        GET /individuals/1234/addresses/?type='Mailing'

    In this example, the '1234' value is provided for the `:partyId` parameter in the path while `:type` is passed in
    the query string.

    For POST, PUT, and DELETE requests, parameters not included in the URL should be encoded as JSON with a
    Content-Type of 'application/json'.

    ## Root Endpoint

    You can issue a GET request to the root endpoint (also known as the service root) to get all the endpoint
    categories that the REST API supports:

        curl https://api.abr.ato.gov.au

    ## Authentication

    The Business Registries API supports API Key authentication.

      When you sign up for an account, you are given your first API key. You can generate additional API keys, and delete
      API keys (as you may need to rotate your keys in the future). You authenticate to the Business Registries API by
      providing your secret key in the request header.

host: api.abr.ato.gov.au
basePath: /
schemes:
  - https
# securityDefinitions:
#   apiKey:
#     type: apiKey
#     name: apiKey
#     in: header
x-servers:
  - url: //api.abr.ato.gov.au/
    description: Production API Server
  - url: //api.sandbox.abr.ato.gov.au/
    description: Sandbox API Server
produces:
  - application/json
consumes:
  - application/json

tags:
  - name: Individuals
    description: >
      An individual is a person about whom the registry wishes to maintain information.

      For example, the individual's date and place of birth (for the purposes of identification) and the individual's
      residential address (which is used for administrative or law enforcement purposes).
  - name: Individuals Addresses
    description: |
      The registry maintains information about an individual's contact details for administrative purposes.

        Including:
        - an address for the service of documents
        - a principal place of business address

  - name: Individuals Electronic Addresses
    description: |
      The registry maintains information about an individual's contact details for administrative purposes.

        Including:
        - an email address
        - a mobile number
  - name: Organisations
    description: >
      An organisation usually consists of a number of individuals or groups bound by a common purpose about whom the
      registry wishes to maintain information.

      For example, the organisation's legal entity type (e.g., Incorporated Entity, Unincorporated Entity,
      Partnership or Joint Venture).
  - name: Organisations Addresses
    description: |
      The registry maintains information about an organisation's contact details for administrative purposes.

        Including:
        - an address for the service of documents
        - a principal place of business address
  - name: Organisations Electronic Addresses
    description: |
      The registry maintains information about an organisation's contact details for administrative purposes.

        Including:
        - an email address
        - a mobile number

x-tagGroups:
  - name: Individuals
    tags:
      - Individuals
      - Individuals Addresses
      - Individuals Electronic Addresses
      - Individuals Business Names
      - Individuals Licenses
  - name: Organisations
    tags:
      - Organisations
      - Organisations Addresses
      - Organisations Electronic Addresses
      - Organisations Business Names
      - Organisations Licenses

headers:
  Link:
    description: >
      Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.

      For example:

          Link: <https://api.abr.ato.gov.au/individuals?page=2>; rel="next",
                <https://api.abr.ato.gov.au/individuals?page=34>; rel="last"

      `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries
      start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on
      `page 34`. Accordingly, we have 33 more pages of information that we can consume.
    type: string
  Location:
    description: >
      A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location
      of the new resource.
    type: string

  Pagination-Total:
    description: Total items count.
    type: integer
  Pagination-Limit:
    description: Items per page limit.
    type: integer
  Pagination-Offset:
    description: Pagination offset.
    type: integer

  Rate-Limit-Limit:
    description: The number of allowed requests in the current period.
    type: integer
  Rate-Limit-Remaining:
    description: The number of remaining requests in the current period.
    type: integer
  Rate-Limit-Reset:
    description: >
      The date in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)
      when the current period will reset.
    type: string

parameters:
  apiKey:
    name: apiKey
    in: header
    description: The API key.
    type: string
    required: true
  partyId:
    name: partyId
    in: path
    description: The party identifier.
    type: string
    required: true
  addressId:
    name: addressId
    in: path
    description: The address identifier.
    type: string
    required: true
  dateOfBirth:
    name: dateOfBirth
    in: query
    description: The individual's date of birth in the format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1).
    type: string
    required: false
  placeOfBirth:
    name: placeOfBirth
    in: query
    description: The individual's place of birth.
    type: string
    required: false
  registeredIdentifier:
    name: registeredIdentifier
    in: query
    description: The registered identifier, for example, "ACN" or "ABN".
    type: string
    required: false
  identifier:
    name: identifier
    in: query
    description: The identifier.
    type: string
    required: false

responses:
  InvalidArgument:
    description: The client specified an invalid argument
    schema:
      $ref: '#/definitions/invalid-argument'
  Unauthenticated:
    description: Request not authenticated due to missing, invalid, or expired token
    schema:
      $ref: '#/definitions/unauthenticated'
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/not-found'
  FailedPrecondition:
    description: Request can not be executed in the current system state
    schema:
      $ref: '#/definitions/failed-precondition'


